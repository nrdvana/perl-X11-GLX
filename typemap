TYPEMAP
Display *             O_X11_Xlib
DisplayOrNull         O_X11_XlibOrNull
Visual *              O_X11_Xlib_Opaque
GC                    O_X11_Xlib_Opaque
XEvent *              O_X11_Xlib_Struct
XVisualInfo *         O_X11_Xlib_Struct
XSetWindowAttributes* O_X11_Xlib_Struct
XSizeHints *          O_X11_Xlib_Struct
GLXContext            O_GLXContext
GLXContextOrNull      O_GLXContextOrNull
GLXContextImported    O_GLXContextImported
Window                O_X11_Xlib_XID
Pixmap                O_X11_Xlib_XID
Cursor                O_X11_Xlib_XID
Colormap              O_X11_Xlib_XID
Drawable              O_X11_Xlib_XID
VisualID              O_X11_Xlib_XID
GLXContextID          O_X11_Xlib_XID
Atom                  T_UV
Time                  T_UV
Bool                  T_BOOL

INPUT
O_X11_Xlib
	$var = PerlXlib_get_conn_from_sv($arg, 1)->dpy;

OUTPUT
O_X11_Xlib
	PerlXlib_sv_from_display($arg, $var);

INPUT
O_X11_XlibOrNull
	$var = SvOK($arg)? PerlXlib_get_conn_from_sv($arg, 1)->dpy : NULL;

OUTPUT
O_X11_XlibOrNull
	if ( $var ) PerlXlib_sv_from_display($arg, $var);
	else sv_setsv($arg, &PL_sv_undef);

INPUT
O_X11_Xlib_XID
	$var = PerlXlib_sv_to_xid($arg);

OUTPUT
O_X11_Xlib_XID
	// Always return unsigned integer.  X11::Xlib::* can override this as needed.
	sv_setuv( $arg, $var );

INPUT
O_X11_Xlib_Struct
	$var= ( $type ) PerlXlib_get_struct_ptr(
		$arg, \"X11::Xlib::@{[ $type =~ /(\w+)/ ]}\", sizeof(@{[ $type =~ /(\w+)/ ]}),
		(PerlXlib_struct_pack_fn*) &PerlXlib_@{[ $type =~ /(\w+)/ ]}_pack
	);

INPUT
O_X11_Xlib_Opaque
	if (sv_isa($arg, \"X11::Xlib::@{[ $type =~ /(\w+)/ ]}\")) {
		$var= ($type) SvIV((SV*)SvRV($arg));
	} else {
		croak( \"%s is not a %s\", \"$var\", \"X11::Xlib::@{[ $type =~ /(\w+)/ ]}\" );
	}

OUTPUT
O_X11_Xlib_Opaque
	sv_setref_pv($arg, \"X11::Xlib::@{[ $type =~ /(\w+)/ ]}\", (void*) $var);

INPUT
O_GLXContext
	if (sv_isa($arg, \"X11::GLX::Context\") || sv_isa($arg, \"X11::GLX::Context::Imported\")) {
		$var= ($type) SvIV((SV*)SvRV($arg));
	} else {
		croak( \"%s is not a %s\", \"$var\", \"X11::GLX::Context\" );
	}

OUTPUT
O_GLXContext
	sv_setref_pv($arg, \"X11::GLX::Context\", (void*) $var);

INPUT
O_GLXContextOrNull
	if (!SvOK($arg))
		$var= NULL;
	else if (sv_isa($arg, \"X11::GLX::Context\") || sv_isa($arg, \"X11::GLX::Context::Imported\")) {
		$var= ($type) SvIV((SV*)SvRV($arg));
	} else {
		croak( \"%s is not a %s\", \"$var\", \"X11::GLX::Context\" );
	}

INPUT
O_GLXContextImported
	if (sv_isa($arg, \"X11::GLX::Context::Imported\")) {
		$var= ($type) SvIV((SV*)SvRV($arg));
	} else {
		croak( \"%s is not a %s\", \"$var\", \"X11::GLX::Context::Imported\" );
	}

OUTPUT
O_GLXContextImported
	sv_setref_pv($arg, \"X11::GLX::Context::Imported\", (void*) $var);
